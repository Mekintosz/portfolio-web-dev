@use "../abstracts/variables" as *;

@mixin type-media(
  $font-small,
  $font-medium,
  $font-large,
  $vw-small: 320px,
  $vw-medium: 768px,
  $vw-large: 1200px
) {
  font-size: $font-small;

  @media (min-width: $vw-medium) {
    font-size: $font-medium;
  }

  @media (min-width: $vw-large) {
    font-size: $font-large;
  }
}

@mixin width-media(
  $small,
  $medium,
  $large,
  $vw-small: 320px,
  $vw-medium: 768px,
  $vw-large: 1200px
) {
  width: $small;

  @media (min-width: $vw-medium) {
    width: $medium;
  }

  @media (min-width: $vw-large) {
    width: $large;
  }
}

@mixin theme-prop(
  $property: background-color,
  $light-value: $color-light-scheme-body,
  $dark-value: $color-dark-scheme-body
) {
  #{$property}: $dark-value;

  [data-theme="light"] & {
    #{$property}: $light-value;
  }
}

@mixin theme-img() {
  box-shadow: $box-shadow-dark;

  [data-theme="light"] & {
    box-shadow: $box-shadow-bright;
  }
}

// For flexbox centering
@mixin flex-items-position($direction: row, $justify: center, $align: center) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

@mixin panel {
  border: 1px solid $color-accent-prime;
  border-radius: 8px;
  padding: 0.6em;

  @media (min-width: 768px) {
    padding: 1.2em;
  }

  @media (min-width: 1200px) {
    padding: 1.8em;
  }
}

// Mixin to add a transition without overwriting
@mixin add-transition($transition...) {
  // If the element already has a transition, append new one
  transition: #{if(
      transition != null,
      transition + ", " + $transition,
      $transition
    )};
}
